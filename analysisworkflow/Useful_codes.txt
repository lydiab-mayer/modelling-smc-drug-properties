# Useful codes

# Force remove files
find . -name '*' | xargs rm

# Checking number of files
ls /scicore/home/penny/GROUP/M3TPP/EXP_2MAB/om/ | wc -l

# Give permissions
chmod -R 774 "path"

# Remove files if rm * doesn't work
find . -type f -exec rm -v {} \;

# Get list of git files
git ls-tree -r master --name-only

# Git commit only 1 file example with comment
git commit -m "Changed duration from 6h to 1 day" 5_optimization/genoptimizationscripts.R

# Checkout to the branch that you intended to commit to
git checkout [branchname]

# Shows you what branch you're on, what files are in the working or staging directory, and any other important information.
git status

# Merge branch commit changes back to master
git checkout master
git pull origin master
git merge [branchname]
git push origin master

# Cloning existing repository
cd [path] # where you want the repo to be copied
git clone [url] # copy url from gitlab

# Adding new files
git status # check branch & which files modified/added
git add . # add all files listed in git status
git commit -m "[comment]" # add comment for all files to be commited
git push # files added to repo

# Pushing changes to a new branch
git checkout -b [branchname] # creates new branch and checkout to new branch at same time
# next commit changes while in branch
git push -u origin [branchname] # push to create new branch

# Selective merge of specific files from branch
https://stackoverflow.com/questions/449541/how-can-i-selectively-merge-or-pick-changes-from-another-branch-in-git
1. Selectivly merge from one branch to current branch or master
git checkout master
git merge --no-ff --no-commit [branchname]
git status
2. Files you don't want to merge
git checkout HEAD [file]
3. If you want the version in branch and not master
git checkout [branchname] [file2]

# Discard uncommitted changes to a file
git checkout --<file>  

# Remove staged file
git reset HEAD -- [file]

# Remove untracked files
# Print out the list of files and directories which will be removed (dry run)
git clean -n -d
# Delete the files from the repository
git clean -f
